function I = inertia_200(q)
%% INERTIA - Inertia matrix for the Quantec Ultra SE 200 arm. 
% ========================================================================= 
%    
%    I = inertia(rob,q) 
%    I = rob.inertia(q) 
%    
%  Description:: 
%    Given a full set of joint variables the function computes the 
%    inertia Matrix of the robot. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    I:  [6x6] inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

I = zeros(length(q)); 
I(1,:) = inertia_row_1([], q); 
I(2,:) = inertia_row_2([], q); 
I(3,:) = inertia_row_3([], q); 
I(4,:) = inertia_row_4([], q); 
I(5,:) = inertia_row_5([], q); 
I(6,:) = inertia_row_6([], q); 


function Irow = inertia_row_1(rob,in2)
%% INERTIA_ROW_1 - Computation of the robot specific inertia matrix row for corresponding to joint 1 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_1(rob,q) 
%    Irow = rob.inertia_row_1(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 1 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:16

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = sin(q2);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = t2.^2;
t11 = t3.^2;
t12 = t4.^2;
t13 = t5.^2;
t18 = t2.*t3.*t4.*t5.*t8.*t9.*2.4e-4;
t19 = t4.*t5.*t6.*t7.*t8.*t9.*2.4e-4;
t21 = t2.*t3.*t4.*1.046566e-1;
t22 = t4.*t6.*t7.*1.046566e-1;
t23 = t2.*t7.*7.5031128e-1;
t24 = t3.*t6.*7.5031128e-1;
t28 = t2.*t3.*t5.*4.0e-6;
t29 = t5.*t6.*t7.*4.0e-6;
t34 = t2.*t4.*t7.*t9.*4.0e-6;
t35 = t3.*t4.*t6.*t9.*4.0e-6;
t41 = t6.*t7.*t9.*4.21722e-2;
t42 = t2.*t3.*t9.*4.21722e-2;
t44 = t2.*t7.*t8.*1.16e-4;
t45 = t3.*t6.*t8.*1.16e-4;
t46 = t2.*t7.*t8.*t9.*7.166134e+1;
t47 = t3.*t6.*t8.*t9.*7.166134e+1;
t48 = t2.*t4.*t5.*t7.*4.21722e-2;
t49 = t3.*t4.*t5.*t6.*4.21722e-2;
t50 = t2.*t4.*t7.*2.5327982;
t51 = t3.*t4.*t6.*2.5327982;
t56 = t6.*t7.*1.6200394e-1;
t59 = t2.*t3.*1.6200394e-1;
t62 = t2.*t3.*t8.*t9.*2.93811494;
t63 = t6.*t7.*t8.*t9.*2.93811494;
t65 = t2.*t3.*t4.*t8.*2.317036335172559e+1;
t66 = t4.*t6.*t7.*t8.*2.317036335172559e+1;
t68 = t2.*t5.*t7.*t8.*t9.*2.342257715172559e+1;
t69 = t3.*t5.*t6.*t8.*t9.*2.342257715172559e+1;
t14 = t2.*t7.*t8.*t13.*2.4e-4;
t15 = t3.*t6.*t8.*t13.*2.4e-4;
t20 = -t18;
t25 = -t21;
t26 = -t23;
t27 = -t24;
t30 = t2.*t3.*t12.*5.4e-5;
t31 = t6.*t7.*t12.*5.4e-5;
t32 = -t28;
t36 = -t34;
t37 = -t35;
t38 = t2.*t3.*t5.*t12.*8.0e-6;
t39 = t5.*t6.*t7.*t12.*8.0e-6;
t43 = -t41;
t52 = -t48;
t53 = -t49;
t54 = -t50;
t55 = -t51;
t57 = t2.*t3.*t9.*t12.*8.43444e-2;
t58 = t6.*t7.*t9.*t12.*8.43444e-2;
t61 = -t59;
t64 = -t63;
t67 = -t66;
t70 = t2.*t3.*t4.*t8.*t13.*2.342257715172559e+1;
t71 = t4.*t6.*t7.*t8.*t13.*2.342257715172559e+1;
t16 = -t14;
t17 = -t15;
t33 = -t30;
t40 = -t39;
t60 = -t57;
t72 = -t70;
Irow = [t2.*4.18837594e+2+t5.*1.4332268e+2+t6.*2.37384e-1+t10.*3.8443190597e+2-t11.*2.7900464863e+2-t12.*2.317036335172559e+1+sin(q2.*2.0).*1.20017942e+1+sin(q3.*2.0).*1.142219628e+1-sin(q4.*2.0).*2.7e-5+t2.*t3.*1.99211012e+2-t2.*t7.*9.874529-t3.*t6.*9.874529+t3.*t10.*6.54550468e+2-t6.*t7.*1.99211012e+2-t5.*t10.*1.4332268e+2-t5.*t11.*1.4332268e+2-t7.*t10.*3.2444881e+1+t8.*t10.*2.093132e-1+t8.*t11.*2.093132e-1+t10.*t11.*5.5800929726e+2+t10.*t12.*2.317036335172559e+1-t10.*t13.*2.342257715172559e+1+t11.*t12.*2.317036335172559e+1-t11.*t13.*2.342257715172559e+1+t12.*t13.*2.342257715172559e+1+t2.*t3.*t5.*5.0162938e+1-t2.*t3.*t6.*3.2444881e+1+t2.*t4.*t6.*2.32e-4+t2.*t5.*t6.*5.87622988+t3.*t4.*t7.*2.32e-4-t2.*t6.*t7.*6.54550468e+2+t3.*t5.*t7.*5.87622988+t2.*t6.*t8.*5.0655964-t2.*t7.*t8.*1.78682-t3.*t6.*t8.*1.78682+t4.*t5.*t8.*8.0e-6+t3.*t5.*t10.*1.64821082e+2+t3.*t7.*t8.*5.0655964-t5.*t6.*t7.*5.0162938e+1-t2.*t6.*t11.*4.568878512e+1-t3.*t7.*t10.*4.568878512e+1-t4.*t8.*t9.*8.43444e-2+t4.*t8.*t10.*5.4e-5+t4.*t8.*t11.*5.4e-5+t4.*t9.*t10.*5.87622988+t4.*t9.*t11.*5.87622988-t5.*t9.*t10.*2.4e-4-t5.*t9.*t11.*2.4e-4-t7.*t8.*t10.*5.87098+t5.*t9.*t12.*2.4e-4+t5.*t10.*t11.*2.8664536e+2-t8.*t10.*t11.*4.186264e-1-t10.*t11.*t12.*4.634072670345119e+1+t10.*t11.*t13.*4.684515430345119e+1-t10.*t12.*t13.*2.342257715172559e+1-t11.*t12.*t13.*2.342257715172559e+1-t2.*t3.*t6.*t7.*5.5800929726e+2-t2.*t3.*t6.*t8.*5.87098-t2.*t5.*t6.*t7.*1.64821082e+2+t2.*t4.*t6.*t9.*1.4332268e+2+t2.*t5.*t6.*t8.*8.43444e-2-t2.*t4.*t7.*t9.*5.0162938e+1-t3.*t4.*t6.*t9.*5.0162938e+1-t2.*t4.*t6.*t11.*4.64e-4+t3.*t4.*t7.*t9.*1.4332268e+2+t3.*t5.*t7.*t8.*8.43444e-2-t2.*t5.*t6.*t11.*1.175245976e+1-t3.*t4.*t7.*t10.*4.64e-4-t2.*t4.*t6.*t13.*4.8e-4+t2.*t6.*t8.*t9.*8.0e-6-t3.*t5.*t7.*t10.*1.175245976e+1-t2.*t6.*t8.*t11.*1.01311928e+1-t3.*t4.*t7.*t13.*4.8e-4+t3.*t7.*t8.*t9.*8.0e-6-t4.*t5.*t8.*t10.*8.0e-6-t3.*t7.*t8.*t10.*1.01311928e+1-t4.*t5.*t8.*t11.*8.0e-6-t4.*t7.*t9.*t10.*1.64821082e+2+t4.*t8.*t9.*t10.*8.43444e-2+t4.*t8.*t9.*t11.*8.43444e-2-t4.*t8.*t10.*t11.*1.08e-4-t4.*t9.*t10.*t11.*1.175245976e+1+t5.*t9.*t10.*t11.*4.8e-4-t5.*t9.*t10.*t12.*2.4e-4-t5.*t9.*t11.*t12.*2.4e-4+t10.*t11.*t12.*t13.*4.684515430345119e+1-t2.*t3.*t5.*t6.*t7.*2.8664536e+2-t2.*t3.*t4.*t6.*t9.*1.64821082e+2+t2.*t3.*t6.*t7.*t8.*4.186264e-1+t2.*t4.*t5.*t6.*t9.*4.684515430345119e+1+t3.*t4.*t5.*t7.*t9.*4.684515430345119e+1+t2.*t3.*t6.*t7.*t12.*4.634072670345119e+1-t2.*t3.*t6.*t7.*t13.*4.684515430345119e+1-t2.*t4.*t6.*t9.*t11.*2.8664536e+2-t2.*t5.*t6.*t8.*t11.*1.686888e-1-t3.*t4.*t7.*t9.*t10.*2.8664536e+2-t3.*t5.*t7.*t8.*t10.*1.686888e-1+t2.*t4.*t6.*t11.*t13.*9.6e-4-t2.*t6.*t8.*t9.*t11.*1.6e-5+t3.*t4.*t7.*t10.*t13.*9.6e-4-t3.*t7.*t8.*t9.*t10.*1.6e-5+t4.*t5.*t8.*t10.*t11.*1.6e-5-t4.*t8.*t9.*t10.*t11.*1.686888e-1+t5.*t9.*t10.*t11.*t12.*4.8e-4+t2.*t3.*t4.*t6.*t7.*t8.*1.08e-4+t2.*t3.*t4.*t6.*t7.*t9.*1.175245976e+1-t2.*t3.*t5.*t6.*t7.*t9.*4.8e-4-t2.*t4.*t5.*t6.*t9.*t11.*9.369030860690237e+1-t3.*t4.*t5.*t7.*t9.*t10.*9.369030860690237e+1-t2.*t3.*t6.*t7.*t12.*t13.*4.684515430345119e+1-t2.*t3.*t4.*t5.*t6.*t7.*t8.*1.6e-5+t2.*t3.*t4.*t6.*t7.*t8.*t9.*1.686888e-1-t2.*t3.*t5.*t6.*t7.*t9.*t12.*4.8e-4+1.050581430444787e+3,t2.*1.1686308e-1+t6.*1.825116472e+1+t16+t17+t19+t20+t22+t25+t26+t27+t29+t31+t32+t33+t36+t37+t38+t40+t42+t43+t44+t45+t46+t47+t52+t53+t54+t55+t56+t58+t60+t61+t62+t64+t65+t67+t68+t69+t71+t72-t4.*t6.*2.93549+t6.*t8.*t9.*8.2410541e+1,t16+t17+t19+t20+t22+t25+t26+t27+t29+t31+t32+t33+t36+t37+t38+t40+t42+t43+t44+t45+t46+t47+t52+t53+t54+t55+t56+t58+t60+t61+t62+t64+t65+t67+t68+t69+t71+t72,t8.*8.9341e-1-t2.*t7.*2.410021595172559e+1-t3.*t6.*2.410021595172559e+1+t2.*t8.*2.93549+t4.*t9.*2.5081469e+1+t2.*t3.*t4.*1.16e-4+t2.*t3.*t8.*2.5327982+t2.*t4.*t9.*8.2410541e+1-t2.*t7.*t8.*1.046566e-1-t3.*t6.*t8.*1.046566e-1-t4.*t6.*t7.*1.16e-4-t6.*t7.*t8.*2.5327982+t2.*t7.*t13.*2.342257715172559e+1+t3.*t6.*t13.*2.342257715172559e+1+t2.*t3.*t4.*t9.*7.166134e+1+t2.*t3.*t5.*t8.*4.21722e-2-t2.*t3.*t4.*t13.*2.4e-4+t2.*t3.*t8.*t9.*4.0e-6-t2.*t4.*t7.*t9.*2.93811494-t3.*t4.*t6.*t9.*2.93811494+t2.*t5.*t7.*t9.*2.4e-4+t3.*t5.*t6.*t9.*2.4e-4-t4.*t6.*t7.*t9.*7.166134e+1-t5.*t6.*t7.*t8.*4.21722e-2+t4.*t6.*t7.*t13.*2.4e-4-t6.*t7.*t8.*t9.*4.0e-6+t2.*t3.*t4.*t5.*t9.*2.342257715172559e+1-t4.*t5.*t6.*t7.*t9.*2.342257715172559e+1,t5.*t8.*2.5081469e+1+t4.*t28+t4.*t41+t2.*t3.*t8.*2.362657915172559e+1-t2.*t5.*t7.*4.21722e-2-t3.*t5.*t6.*4.21722e-2+t2.*t5.*t8.*8.2410541e+1-t2.*t7.*t9.*4.0e-6-t3.*t6.*t9.*4.0e-6-t6.*t7.*t8.*2.362657915172559e+1-t2.*t3.*t4.*t9.*4.21722e-2+t2.*t3.*t5.*t8.*7.166134e+1-t2.*t5.*t7.*t8.*2.93811494-t3.*t5.*t6.*t8.*2.93811494-t4.*t5.*t6.*t7.*4.0e-6-t5.*t6.*t7.*t8.*7.166134e+1,0.0];


function Irow = inertia_row_2(rob,in2)
%% INERTIA_ROW_2 - Computation of the robot specific inertia matrix row for corresponding to joint 2 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_2(rob,q) 
%    Irow = rob.inertia_row_2(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 2 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:17

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = sin(q2);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = q4.*2.0;
t11 = q5.*2.0;
t12 = t4.^2;
t13 = t5.^2;
t14 = sin(t10);
t15 = sin(t11);
t18 = t8.*2.093132e-1;
t21 = t4.*t5.*t8.*8.0e-6;
t23 = t5.*1.4332268e+2;
t24 = t4.*t8.*t9.*8.43444e-2;
t25 = t4.*t9.*5.87622988;
t16 = t15.*1.2e-4;
t17 = t5.*t9.*t12.*2.4e-4;
t20 = t14.*2.7e-5;
t22 = -t21;
t26 = t12.*2.317036335172559e+1;
t27 = t13.*2.342257715172559e+1;
t29 = t12.*t13.*(-2.342257715172559e+1);
t19 = -t17;
t28 = t12.*t27;
Irow = [t2.*1.1686308e-1+t6.*1.825116472e+1-t2.*t3.*1.6200394e-1-t2.*t7.*7.5031128e-1-t3.*t6.*7.5031128e-1-t4.*t6.*2.93549+t6.*t7.*1.6200394e-1-t2.*t3.*t4.*1.046566e-1-t2.*t3.*t5.*4.0e-6-t2.*t4.*t7.*2.5327982-t3.*t4.*t6.*2.5327982+t2.*t3.*t9.*4.21722e-2-t2.*t3.*t12.*5.4e-5+t2.*t7.*t8.*1.16e-4+t3.*t6.*t8.*1.16e-4+t4.*t6.*t7.*1.046566e-1+t5.*t6.*t7.*4.0e-6-t6.*t7.*t9.*4.21722e-2+t6.*t8.*t9.*8.2410541e+1+t6.*t7.*t12.*5.4e-5+t2.*t3.*t4.*t8.*2.317036335172559e+1-t2.*t4.*t5.*t7.*4.21722e-2-t3.*t4.*t5.*t6.*4.21722e-2+t2.*t3.*t5.*t12.*8.0e-6+t2.*t3.*t8.*t9.*2.93811494-t2.*t4.*t7.*t9.*4.0e-6-t3.*t4.*t6.*t9.*4.0e-6-t4.*t6.*t7.*t8.*2.317036335172559e+1-t2.*t3.*t9.*t12.*8.43444e-2+t2.*t7.*t8.*t9.*7.166134e+1+t3.*t6.*t8.*t9.*7.166134e+1-t2.*t7.*t8.*t13.*2.4e-4-t3.*t6.*t8.*t13.*2.4e-4-t5.*t6.*t7.*t12.*8.0e-6-t6.*t7.*t8.*t9.*2.93811494+t6.*t7.*t9.*t12.*8.43444e-2-t2.*t3.*t4.*t8.*t13.*2.342257715172559e+1+t2.*t5.*t7.*t8.*t9.*2.342257715172559e+1+t3.*t5.*t6.*t8.*t9.*2.342257715172559e+1+t4.*t6.*t7.*t8.*t27-t2.*t3.*t4.*t5.*t8.*t9.*2.4e-4+t4.*t5.*t6.*t7.*t8.*t9.*2.4e-4,t3.*6.54550468e+2-t7.*3.2444881e+1+t16+t18+t19+t20+t22+t23+t24+t25+t26+t27+t29+t3.*t5.*1.64821082e+2-t7.*t8.*5.87098-t4.*t7.*t9.*1.64821082e+2+1.796994637362653e+3,t3.*3.27275234e+2-t7.*1.62224405e+1+t16+t18+t19+t20+t22+t23+t24+t25+t26+t27+t29+t3.*t5.*8.2410541e+1-t7.*t8.*2.93549-t4.*t7.*t9.*8.2410541e+1+2.8234963389e+2,t4.*2.5327982-t8.*1.16e-4+t3.*t4.*2.93549+t4.*t5.*4.21722e-2+t4.*t9.*4.0e-6-t8.*t9.*7.166134e+1+t8.*t13.*2.4e-4-t3.*t8.*t9.*8.2410541e+1-t5.*t8.*t9.*2.342257715172559e+1,t4.*2.362657915172559e+1+t9.*2.93811494+t4.*t5.*7.166134e+1-t5.*t8.*4.0e-6-t7.*t9.*8.2410541e+1+t8.*t9.*4.21722e-2+t3.*t4.*t5.*8.2410541e+1,0.0];



function Irow = inertia_row_3(rob,in2)
%% INERTIA_ROW_3 - Computation of the robot specific inertia matrix row for corresponding to joint 3 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_3(rob,q) 
%    Irow = rob.inertia_row_3(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 3 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:18

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = sin(q2);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = q4.*2.0;
t11 = q5.*2.0;
t12 = t4.^2;
t13 = t5.^2;
t14 = sin(t10);
t15 = sin(t11);
t18 = t8.*2.093132e-1;
t21 = t4.*t5.*t8.*8.0e-6;
t23 = t5.*1.4332268e+2;
t24 = t4.*t8.*t9.*8.43444e-2;
t25 = t4.*t9.*5.87622988;
t16 = t15.*1.2e-4;
t17 = t5.*t9.*t12.*2.4e-4;
t20 = t14.*2.7e-5;
t22 = -t21;
t26 = t12.*2.317036335172559e+1;
t27 = t13.*2.342257715172559e+1;
t29 = t12.*t13.*(-2.342257715172559e+1);
t19 = -t17;
t28 = t12.*t27;
Irow = [t2.*t3.*(-1.6200394e-1)-t2.*t7.*7.5031128e-1-t3.*t6.*7.5031128e-1+t6.*t7.*1.6200394e-1-t2.*t3.*t4.*1.046566e-1-t2.*t3.*t5.*4.0e-6-t2.*t4.*t7.*2.5327982-t3.*t4.*t6.*2.5327982+t2.*t3.*t9.*4.21722e-2-t2.*t3.*t12.*5.4e-5+t2.*t7.*t8.*1.16e-4+t3.*t6.*t8.*1.16e-4+t4.*t6.*t7.*1.046566e-1+t5.*t6.*t7.*4.0e-6-t6.*t7.*t9.*4.21722e-2+t6.*t7.*t12.*5.4e-5+t2.*t3.*t4.*t8.*2.317036335172559e+1-t2.*t4.*t5.*t7.*4.21722e-2-t3.*t4.*t5.*t6.*4.21722e-2+t2.*t3.*t5.*t12.*8.0e-6+t2.*t3.*t8.*t9.*2.93811494-t2.*t4.*t7.*t9.*4.0e-6-t3.*t4.*t6.*t9.*4.0e-6-t4.*t6.*t7.*t8.*2.317036335172559e+1-t2.*t3.*t9.*t12.*8.43444e-2+t2.*t7.*t8.*t9.*7.166134e+1+t3.*t6.*t8.*t9.*7.166134e+1-t2.*t7.*t8.*t13.*2.4e-4-t3.*t6.*t8.*t13.*2.4e-4-t5.*t6.*t7.*t12.*8.0e-6-t6.*t7.*t8.*t9.*2.93811494+t6.*t7.*t9.*t12.*8.43444e-2-t2.*t3.*t4.*t8.*t13.*2.342257715172559e+1+t2.*t5.*t7.*t8.*t9.*2.342257715172559e+1+t3.*t5.*t6.*t8.*t9.*2.342257715172559e+1+t4.*t6.*t7.*t8.*t27-t2.*t3.*t4.*t5.*t8.*t9.*2.4e-4+t4.*t5.*t6.*t7.*t8.*t9.*2.4e-4,t3.*3.27275234e+2-t7.*1.62224405e+1+t16+t18+t19+t20+t22+t23+t24+t25+t26+t27+t29+t3.*t5.*8.2410541e+1-t7.*t8.*2.93549-t4.*t7.*t9.*8.2410541e+1+2.8234963389e+2,t16+t18+t19+t20+t22+t23+t24+t25+t26+t27+t29+1.033680545001111e+3,t4.*2.5327982-t8.*1.16e-4+t4.*t5.*4.21722e-2+t4.*t9.*4.0e-6-t8.*t9.*7.166134e+1+t8.*t13.*2.4e-4-t5.*t8.*t9.*2.342257715172559e+1,t4.*2.362657915172559e+1+t9.*2.93811494+t4.*t5.*7.166134e+1-t5.*t8.*4.0e-6+t8.*t9.*4.21722e-2,0.0];


function Irow = inertia_row_4(rob,in2)
%% INERTIA_ROW_4 - Computation of the robot specific inertia matrix row for corresponding to joint 4 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_4(rob,q) 
%    Irow = rob.inertia_row_4(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 4 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:18

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = sin(q2);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = t5.^2;
t12 = t4.*t9.*4.0e-6;
t13 = t8.*t9.*7.166134e+1;
t14 = t8.*1.16e-4;
t15 = t4.*t5.*4.21722e-2;
t17 = t4.*2.5327982;
t19 = t5.*t8.*t9.*2.342257715172559e+1;
t11 = t8.*t10.*2.4e-4;
t16 = -t13;
t18 = -t14;
t20 = -t19;
Irow = [t8.*8.9341e-1-t2.*t7.*2.410021595172559e+1-t3.*t6.*2.410021595172559e+1+t2.*t8.*2.93549+t4.*t9.*2.5081469e+1+t2.*t3.*t4.*1.16e-4+t2.*t3.*t8.*2.5327982+t2.*t4.*t9.*8.2410541e+1-t2.*t7.*t8.*1.046566e-1-t3.*t6.*t8.*1.046566e-1-t4.*t6.*t7.*1.16e-4+t2.*t7.*t10.*2.342257715172559e+1+t3.*t6.*t10.*2.342257715172559e+1-t6.*t7.*t8.*2.5327982+t2.*t3.*t4.*t9.*7.166134e+1+t2.*t3.*t5.*t8.*4.21722e-2-t2.*t3.*t4.*t10.*2.4e-4+t2.*t3.*t8.*t9.*4.0e-6-t2.*t4.*t7.*t9.*2.93811494-t3.*t4.*t6.*t9.*2.93811494+t2.*t5.*t7.*t9.*2.4e-4+t3.*t5.*t6.*t9.*2.4e-4-t4.*t6.*t7.*t9.*7.166134e+1-t5.*t6.*t7.*t8.*4.21722e-2+t4.*t6.*t7.*t10.*2.4e-4-t6.*t7.*t8.*t9.*4.0e-6+t2.*t3.*t4.*t5.*t9.*2.342257715172559e+1-t4.*t5.*t6.*t7.*t9.*2.342257715172559e+1,t11+t12+t15+t16+t17+t18+t20+t3.*t4.*2.93549-t3.*t8.*t9.*8.2410541e+1,t11+t12+t15+t16+t17+t18+t20,t10.*(-2.342257715172559e+1)-sin(q5.*2.0).*1.2e-4+1.085951459517256e+2,t5.*4.21722e-2+t9.*4.0e-6,0.0];


function Irow = inertia_row_5(rob,in2)
%% INERTIA_ROW_5 - Computation of the robot specific inertia matrix row for corresponding to joint 5 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_5(rob,q) 
%    Irow = rob.inertia_row_5(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 5 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:19

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = sin(q2);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = t5.*t8.*4.0e-6;
t12 = t4.*t5.*7.166134e+1;
t13 = t8.*t9.*4.21722e-2;
t14 = t9.*2.93811494;
t15 = t4.*2.362657915172559e+1;
t11 = -t10;
Irow = [t5.*t8.*2.5081469e+1+t2.*t3.*t8.*2.362657915172559e+1-t2.*t5.*t7.*4.21722e-2-t3.*t5.*t6.*4.21722e-2+t2.*t5.*t8.*8.2410541e+1-t2.*t7.*t9.*4.0e-6-t3.*t6.*t9.*4.0e-6-t6.*t7.*t8.*2.362657915172559e+1+t2.*t3.*t4.*t5.*4.0e-6-t2.*t3.*t4.*t9.*4.21722e-2+t2.*t3.*t5.*t8.*7.166134e+1-t2.*t5.*t7.*t8.*2.93811494-t3.*t5.*t6.*t8.*2.93811494-t4.*t5.*t6.*t7.*4.0e-6+t4.*t6.*t7.*t9.*4.21722e-2-t5.*t6.*t7.*t8.*7.166134e+1,t11+t12+t13+t14+t15-t7.*t9.*8.2410541e+1+t3.*t4.*t5.*8.2410541e+1,t11+t12+t13+t14+t15,t5.*4.21722e-2+t9.*4.0e-6,1.229584873603424e+2,0.0];
function Irow = inertia_row_6(rob,in2)
%% INERTIA_ROW_6 - Computation of the robot specific inertia matrix row for corresponding to joint 6 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_6(rob,q) 
%    Irow = rob.inertia_row_6(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 6 of 6 for Quantec Ultra SE 200. 
%    
%  Input:: 
%    rob: robot object of Quantec Ultra SE 200 specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2021, by Peter I. Corke 
% Copyright (C) 2012-2021, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    02-Mar-2021 16:27:19

Irow = [0.0,0.0,0.0,0.0,0.0,4.120103953484629e+1];
